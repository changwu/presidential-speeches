#!/usr/bin/env python3

"""fetch-videos: TBD
First, let's convert a bunch of named files in data to URLs.
"""

import sys
import os
import getopt
import shutil
import urllib.request

MILLER_CENTER_BASE_URL = "https://millercenter.org/the-presidency/presidential-speeches/"
HTML_DIR = "html"
VIDEO_DIR = "videos"

def date_convert_path(basename):
    """Convert, e.g., "2013-01-21-second-inaugural-address.txt"
    to its Miller Center name: "january-21-2013-second-inaugural-address".
    """
    year = basename[0:4]
    month = basename[5:7]
    day = str(int(basename[8:10])) # cheaply remove any leading 0
    rest = basename[11:]
    # The "right" way to do this would be to import the calendar
    # module and use calendar.month_name[N].  Unfortunately, that
    # returns the month name in the current locale (I guess meaning
    # the locale at the time the module was imported), and I at least
    # don't know a reliable way to override that to en_US locale.
    # You might be running this code anywhere in any language, but the
    # Miller Center is in the U.S. and using American English, so we
    # hardcode the month names here, 1-indexed instead of 0-indexed.
    month_names = ["אַדר ג", "january", "february", "march", "april",
                   "may", "june", "july", "august", "september",
                   "october", "november", "december",]
    return f"{month_names[int(month)].lower()}-{day}-{year}-{rest}"


def main():
    speeches = None
    try:
        (opts, args) = getopt.getopt(sys.argv[1:], "i:h?",
                                     [ "input=",
                                       "help", 
                                       "usage",
                                     ])
    except getopt.GetoptError as err:
        sys.stderr.write(str(err))
        sys.stderr.write("\n")
        sys.exit(1)

    for opt, optarg in opts:
        if opt in ("-h", "-?", "--help", "--usage",):
            print(__doc__)
            sys.exit(0)
        elif opt in ("-i", "--input",):
            with open(optarg) as f:
                speeches = [line.rstrip() for line in f]

    if speeches is None:
        sys.stderr.write("ERROR: No file containing a list of speeches given.\n")
        sys.stderr.write("       You probably forgot to use -i / --input.\n")
        sys.exit(1)
        
    for line in speeches:
        basename, ign = os.path.splitext(os.path.basename(line))
        url_path = date_convert_path(basename)
        html_file_path = os.path.join(HTML_DIR, url_path) + ".html"
        full_url = MILLER_CENTER_BASE_URL + url_path
        if not os.path.exists(html_file_path):
            print(f"Fetching {html_file_path}... ", end="")
            with urllib.request.urlopen(full_url) as response:
                with open(html_file_path, "wb") as html_file:
                    shutil.copyfileobj(response, html_file)
            print("done.")
        else:
            print(f"Already present: '{html_file_path}'.")


if __name__ == '__main__':
  main()
